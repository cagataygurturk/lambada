{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Parameters": {
    "LambdaMemorySize": {
      "Type": "Number",
      "Default": "128",
      "Description": "AWS Lambda Function Maximum Allowed Memory."
    },
    "LambdaMaximumExecutionTime": {
      "Type": "Number",
      "Default": "3",
      "Description": "AWS Lambda Function Maximum Execution Time (seconds)."
    },
    "DeploymentS3Bucket": {
      "Description": "Deployment S3 Bucket is where project is deployed after mvn deploy command.",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "63"
    },
    "DeploymentS3Key": {
      "Description": "Deployment S3 Key is the S3 Path where project is deployed after mvn deploy command.",
      "Type": "String",
      "MinLength": "1"
    },
    "LambdaDescription": {
      "Description": "Lambda Description",
      "Type": "String",
      "MinLength": "1"
    },
    "LambdaExecutionRoleManagedPolicyARNs": {
      "Description": "Managed Policy ARNs for Lambda Execution IAM Role",
      "Type": "CommaDelimitedList",
      "Default": "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
    },
    "LambdaHandler": {
      "Description": "AWS Lambda Function entry point.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "512",
      "Default": "org.lambadaframework.runtime.Handler"
    },
    "SecurityGroupIds": {
      "Description": "Lambda VPC Security Group Ids",
      "Type": "CommaDelimitedList",
      "Default": ""
    },
    "SubnetIds": {
      "Description": "Lambda VPC Subnet Ids",
      "Type": "CommaDelimitedList",
      "Default": ""
    }
  },
  "Conditions": {
    "UseVpcForLambda": {
      "Fn::Not": [
        {
          "Fn::And": [
            {
              "Fn::Equals": [
                {
                  "Fn::Join": [
                    ",",
                    {
                      "Ref": "SubnetIds"
                    }
                  ]
                },
                ""
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Fn::Join": [
                    ",",
                    {
                      "Ref": "SecurityGroupIds"
                    }
                  ]
                },
                ""
              ]
            }
          ]
        }
      ]
    }
  },
  "Mappings": {
  },
  "Resources": {
    "LambadaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "apigateway.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": {
          "Ref": "LambdaExecutionRoleManagedPolicyARNs"
        }
      }
    },
    "LambadaExecutionPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "${stage}-${project}-lambda",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface"
              ],
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "apigateway:*",
                "iam:PassRole"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "LambadaExecutionRole"
          }
        ]
      }
    },
    "LambdaPermissionForApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":*"
            ]
          ]
        }
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": {
          "Ref": "LambdaHandler"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambadaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": {
            "Ref": "DeploymentS3Bucket"
          },
          "S3Key": {
            "Ref": "DeploymentS3Key"
          }
        },
        "Runtime": "java8",
        "Timeout": {
          "Ref": "LambdaMaximumExecutionTime"
        },
        "MemorySize": {
          "Ref": "LambdaMemorySize"
        },
        "Description": {
          "Ref": "LambdaDescription"
        },
        "VpcConfig": {
          "Fn::If": [
            "UseVpcForLambda",
            {
              "SecurityGroupIds": {
                "Fn::If": [
                  "UseVpcForLambda",
                  {
                    "Ref": "SecurityGroupIds"
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              },
              "SubnetIds": {
                "Fn::If": [
                  "UseVpcForLambda",
                  {
                    "Ref": "SubnetIds"
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "LambdaExecutionRoleArn": {
      "Description": "Lambada Execution Role ARN",
      "Value": {
        "Fn::GetAtt": [
          "LambadaExecutionRole",
          "Arn"
        ]
      }
    },
    "LambdaFunctionArn": {
      "Description": "Lambada Function ARN",
      "Value": {
        "Fn::GetAtt": [
          "LambdaFunction",
          "Arn"
        ]
      }
    }
  }
}